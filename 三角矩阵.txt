题目描述
给出一个三角形，计算从三角形顶部到底部的最小路径和，每一步都可以移动到下面一行相邻的数字，
例如，给出的三角形如下：
[↵     [2],↵    [3,4],↵   [6,5,7],↵  [4,1,8,3]↵]
最小的从顶部到底部的路径和是2 + 3 + 5 + 1 = 11。
注意：
如果你能只用O（N）的额外的空间来完成这项工作的话，就可以得到附加分，其中N是三角形中的行总数。
import java.util.*;
public class Solution {
    public int minimumTotal(ArrayList<ArrayList<Integer>> triangle) {
        if(triangle.isEmpty()){
            return 0;
        }
        ArrayList<ArrayList<Integer>> list = new ArrayList<>(triangle);
        int row = list.size();
        for(int i = row - 2; i >= 0; i--){
            for(int j = 0; j <= i; j++){
                int curSum = Math.min(triangle.get(i+1).get(j+1), triangle.get(i+1).get(j)) 
                    + triangle.get(i).get(j);
                list.get(i).set(j, curSum);
            }
        }
        return list.get(0).get(0);
    }
}
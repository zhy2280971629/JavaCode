给定两个数组，编写一个函数来计算它们的交集。

示例 1:
输入: nums1 = [1,2,2,1], nums2 = [2,2]
输出: [2,2]
示例 2:
输入: nums1 = [4,9,5], nums2 = [9,4,9,8,4]
输出: [4,9]
说明：
输出结果中每个元素出现的次数，应与元素在两个数组中出现的次数一致。
我们可以不考虑输出结果的顺序。
public int[] intersect(int[] nums1, int[] nums2) {
        Map<Integer, Integer> m = new HashMap<>();
        for(int i = 0; i < nums1.length; i++){
            m.put(nums1[i], m.getOrDefault(nums1[i], 0)+1);
        }
        List<Integer> l = new ArrayList<>();
        for(int i = 0; i < nums2.length;i++){
            if(m.getOrDefault(nums2[i], -1) > 0){
                l.add(nums2[i]);
                m.put(nums2[i], m.get(nums2[i])-1); 
            }
        }
        int[] ret = new int[l.size()];
        int index = 0;
        for(int n : l){
            ret[index++] = n;
        }
        return ret;
    }
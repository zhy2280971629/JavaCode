给定一个二叉树，返回其按层次遍历的节点值。 （即逐层地，从左到右访问所有节点）。
例如:
给定二叉树: [3,9,20,null,null,15,7],

    3
   / \
  9  20
    /  \
   15   7
返回其层次遍历结果：

[
  [3],
  [9,20],
  [15,7]
]

public List<List<Integer>> levelOrder(TreeNode root) {
        List<List<Integer>> ret = new ArrayList<>();
        if(null == root){
            return ret;
        }
        Queue<TreeNode> q = new LinkedList<>();
        q.offer(root);
        while(!q.isEmpty()){
            //队列中保存的就是一层的节点
            //一次性将该层的节点全都遍历完
            int size = q.size();
            List<Integer> level = new ArrayList<>(size);
            for(int i = 0;i < size;i++){
                TreeNode cur = q.poll();
                level.add(cur.val);
                //如果有左孩子，左孩子入队列
                if(null != cur.left){
                    q.offer(cur.left);
                }
                if(null != cur.right){
                    q.offer(cur.right);
                } 
            }
            ret.add(level);
        }
        return ret;
    }
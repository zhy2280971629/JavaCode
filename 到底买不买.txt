■题目描述
小红想买些珠子做一串自己喜欢的珠串。卖珠子的摊主有很多串五颜六色
的珠串，但是不肯把任何一-串拆散了卖。于是小红要你帮忙判断一
下，某串珠子里是否包含了全部自己想要的珠子?如果是，那么告诉她有
多少多余的珠子;如果不是，那么告诉她缺了多少珠子。
为方便起见，我们用[0-9]、[a-z]、 [A-Z]范围内的字符来表示颜色。例如，
YrR8RrY是小红想做的珠串;那么ppRYYGrrYBR2258可以买，因为包含
了
全部她想要的珠子，还多了8颗不需要的珠子; ppRYYGrrYB225不能买，
因为没有色珠子，并且少了-颗红色的珠子。
输入描述:
每个输入包含1个测试用例。每个测试用例分别在2行中先后给出摊主的
珠串和小红想做的珠串，两串都不超过1000个珠子。
输出描述: 
如果可以买，则在一行中输出"Yes"以及有多少多余的珠子;如果不可
以买，则在一行中输出“No”以及缺了多少珠子。其间以1个空格分隔。
示例1例
输入
ppRYYGrrYBR2258 
YrR8RrY
输出
Yes 8
import java.util.*;

public class Main{
    public static void buyOrNot(String sale, String want){
        int len1 = sale.length();
        int len2 = want.length();
        boolean[] a = new boolean[len1];
        boolean[] b = new boolean[len2];
        for(int i = 0; i < len1; i++){
            a[i] = true;
        }
        for(int i = 0; i < len2; i++){
            b[i] = true;
        }
        int count = 0;
        for(int i = 0; i < len2; i++){
            for(int j = 0; j < len1; j++){
                if(sale.charAt(j) == want.charAt(i) && a[j] == true && b[i] == true){
                    count++;
                    a[j] = false;
                    b[i] = true;
                    break;
                }
            }
        }
        if(count == len2){
            int e = len1 - count;
            System.out.println("Yes " + e);
        }
        else{
            int e = len2 - count;
            System.out.println("No " + e);
        }
    }
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        while(sc.hasNext()){
            String sale = sc.next();
            String want = sc.next();
            buyOrNot(sale, want);
        }
    }
}

给定一组字符，使用原地算法将其压缩。
压缩后的长度必须始终小于或等于原数组长度。
数组的每个元素应该是长度为1 的字符（不是 int 整数类型）。
在完成原地修改输入数组后，返回数组的新长度。
示例 ：
输入：
["a","a","b","b","c","c","c"]
输出：
返回6，输入数组的前6个字符应该是：["a","2","b","2","c","3"]
public int compress(char[] chars) {
        StringBuilder sb = new StringBuilder();
        int count = 1;
        char ch = chars[0];
        for(int i = 0;i < chars.length - 1;i++){
            if(chars[i] == chars[i + 1]){
                count++;
                ch = chars[i];
            }else{
                sb.append(ch);
                if(count > 1){
                    sb.append(count);
                }
                count = 1;
                ch = chars[i + 1];
            }
        }
        if(count > 1){
            sb.append(ch);
            sb.append(count);
        }else{
            sb.append(ch);
        }
        char[] temp = sb.toString().toCharArray();
        for(int i = 0;i < temp.length;i++){
            chars[i] = temp[i];
        }
        return sb.length();
    }
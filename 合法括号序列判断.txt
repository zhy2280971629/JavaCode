■题目描述
对于一个字符串，请设计一个算法，判断其是否为一一个合法的括号串。
给定-个字符串A和它的长度n，请返回一个bool值代表它是否为-一个合法的括号
串。
一个合法的括号串定义为: 1.只包括括号字符; 2.左括号和右括号一对应
测试样例:
"(() ())",6
返回: true
import java.util.*;

public class Parenthesis {
    public boolean chkParenthesis(String A, int n) {
        Stack<Character> s = new Stack<>();
        for(int i = 0;i < n;i++){
            char ch = A.charAt(i);
            if(ch == '(' || ch == '{' || ch== '['){
                s.push(ch);
            }
            else if(ch == ')' || ch == '}' || ch == ']'){
                if(!s.isEmpty()){
                    char ch1 = s.peek();
                    if((ch1=='(' && ch==')')||(ch1=='{' && ch=='}')||(ch1=='[' && ch==']')){
                        s.pop();
                    }
                    else{
                        return false;
                    }
                }
                else{
                    return false;
                }
            }
            else{
                return false;
            }
        }
        if(s.isEmpty()){
            return true;
        }
        return false;
    }
}

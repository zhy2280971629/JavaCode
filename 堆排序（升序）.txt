//堆排序
    public static void shiftDown(int[]array,int parent,int size){
        int child = parent*2+1;
        while(child < size){
            //找左右孩子中较大的孩子
            if(child+1<size && array[child+1]>array[child]){
                child += 1;
            }
            if(array[child] > array[parent]){
                swap(array,child,parent);
                parent = child;
                child = parent * 2 + 1;
            }else
            {
                return;
            }
        }
    }

    private static void swap(int[]array,int parent,int child){
        int temp = array[parent];
        array[parent] = array[child];
        array[child] = temp;
    }
    public static void heapSort(int[]array){
        //1.建堆
        //找倒数第一个非叶子节点
        int lastLeaf = (array.length - 2)>>1;
        //从lastLeaf到root位置不断向下调整
        for(int root = lastLeaf;root >= 0;root--){
            shiftDown(array,root,array.length);
        }
        //2.利用对删除的思想进行排序
        int end = array.length -1;
        while(end >= 0){
            swap(array,0,end);
            shiftDown(array,0,end);
            end--;
        }
    }

■题目描述
密码要求:
1.长度超过8位
2.包括大小写字母数字其它符号，以上四种至少三种
3.不能有相同长度超2的子串重复
说明:长度超过2的子串
输入描述:
一组或多组长度超过2的子符串。每组占一行
输出描述:
如果符合要求输出: 0K，否则输出NG
示例1输入输出示例仅供调试，后台判题数据一般不包含示例
输入
021Abc9000
021 Abc9Abc1
021 ABC9000
021 Sbc9000
输出
OK
NG
NG
OK
import java.util.*;

public class Main{
    public static int isRight(String password){
        if(password.length() > 8){
            int num1 = 0, num2 = 0, num3 = 0, num4 = 0;
            for(int i = 0; i < password.length(); i++){
                char ch = password.charAt(i);
                if(ch >= 'A' && ch <= 'Z'){
                    num1 = 1;
                }
                else if(ch >= 'a' && ch <= 'z'){
                    num2 = 1;
                }
                else if(ch >= '0' && ch <= '9'){
                    num3 = 1;
                }
                else{
                    num4 = 1;
                }
            }
            if(num1 + num2 + num3 + num4 >= 3){
                for(int i = 0; i < password.length() - 3; i++){
                    String s1 = password.substring(i, i + 3);
                    String s2 = password.substring(i + 3, password.length());
                    if(s2.contains(s1)){
                        return -1;
                    }
                }
                return 0;
            }
            return -1;
        }
        return -1;
    }
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        while(sc.hasNext()){
            String password = sc.nextLine();
            int ret = isRight(password);
            if(ret == 0){
                System.out.println("OK");
            }
            else{
                System.out.println("NG");
            }
        }
        sc.close();
    }
}
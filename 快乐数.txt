编写一个算法来判断一个数是不是“快乐数”。

一个“快乐数”定义为：对于一个正整数，每一次将该数替换为它每个位置上的数字的平方和，然后重复这个过程直到这个数变为 1，也可能是无限循环但始终变不到 1。如果可以变为 1，那么这个数就是快乐数。

示例: 

输入: 19
输出: true
解释: 
12 + 92 = 82
82 + 22 = 68
62 + 82 = 100
12 + 02 + 02 = 1

解法1（ArrayList）：
public boolean isHappy(int n) {
        if(n == 1){
            return true;
        }
        ArrayList<Integer> list = new ArrayList<>();
        list.add(n);
        while(n != 1){
            String[] digit = String.valueOf(n).split("");
            n = 0;
            for(int i = 0;i < digit.length;i++){
                n = n + Integer.parseInt(digit[i]) * Integer.parseInt(digit[i]);
            }       
            for(int i = 0;i < list.size();i++){
                if(n == list.get(i)){
                    return false;
                }
            }
            list.add(n);            
            if(n == 1){
                return true;
            }
        }
        return false;
    }
解法2（递归）：
public boolean isHappy(int n) {
        if(n == 4){
            return false;
        }
        int ret = 0;
        while(n > 0){
            ret += (n % 10) * (n % 10);
            n /= 10;
        }
        return ret == 1 ? true : isHappy(ret);
    }
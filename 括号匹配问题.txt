给定一个只包括 '('，')'，'{'，'}'，'['，']' 的字符串，判断字符串是否有效。
有效字符串需满足：
左括号必须用相同类型的右括号闭合。
左括号必须以正确的顺序闭合。
注意空字符串可被认为是有效字符串。
示例 :
输入: "()"
输出: true
 public boolean isValid(String s) {
        Stack<Character> stack = new Stack();
        for(int i = 0; i < s.length(); i++){
            char ch = s.charAt(i);
            //左括号入栈
            if(ch == '(' || ch == '{' || ch == '['){
                stack.push(ch);
            }else{
                //ch是右括号
                //若栈为空，右括号比左括号多
                if(stack.empty()){
                    return false;
                }else{
                    char chLeft = stack.peek();
                    //检测ch的右括号与chLeft左括号是否匹配
                    if((ch == ')' && chLeft == '(') || 
                    (ch == '}' && chLeft == '{')|| 
                    (ch == ']' && chLeft == '[')){
                        stack.pop();
                    }else{
                        //左右括号次序匹配有问题
                        return false;
                    }
                }
            }
        }
        if(!stack.empty()){
            return false;
        }
        return true;
    }
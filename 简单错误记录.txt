题目描述
开发一个简单错误记录功能小模块，能够记录出错的代码所在的文件名称和行号。
处理:
1.记录最多8条错误记录，对相同的错误记录(即文件名称和行号完全匹配)只记录一条，错误计数增加; (文件所在的目录不同，文件名和行号相同也要合并)
2.超过16个字符的文件名称，只记录文件的最后有效16个字符; (如果文件名不同，而只是文件名的后16个字符和行号相同，也不要合并)
3.输入的文件可能带路径，记录文件名称不能带路径
输入描述: 
一行或多行字符串。每行包括带路径文件名称，行号，以空格隔开。
文件路径为windows格式
如: E: \V1R2 \product\ fpgadrive.c 1325
输出描述:
将所有的记录统计并将结果输出，格式:文件名代码行数数目， 一个空格隔开，如: fpgadrive.c 1325 1
结果根据数目从多到少排序，数目相同的情况下，按照输入第一次出现顺序排序。
如果超过8条记录，则只输出前8条记录。
如果文件名的长度超过16个字符，则只输出后16个字符
示例1输入输出示例仅供调试，后台判题数据一般不包含示例
输入
E: \V1R2\product \ fpgadrive.c 1325
输出
fpgadrive.c 1325 1
import java.util.*;

public class Main {
    private static void RecordingErrorLogs(Map<String, Integer> map,String fileLocation,int lineNum) {
		String[] arr=fileLocation.split("\\\\");
		String fileName=arr[arr.length-1];
		if(fileName.length()>16){
			fileName=fileName.substring(fileName.length()-16);
		}
		String inputStr= fileName +" "+ lineNum;
		if(map.containsKey(inputStr)){
			map.put(inputStr,map.get(inputStr)+1);
		}else{
			map.put(inputStr,1);
		}
	}
    
	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		//不需要排序，所以使用LinkedHashMap
		Map<String, Integer> map=new LinkedHashMap<String, Integer>();
		while(sc.hasNext()){
			String fileLocation=sc.next();
			int lineNum=sc.nextInt();
			//输一条信息，记录一条
			RecordingErrorLogs(map,fileLocation,lineNum);
		}
		//遍历map的key键值（含有文件+行号信息），输出最后的八条记录；
		int count=0;
		for(String s:map.keySet()){
			count++;
			if(count>map.size()-8)//从倒数第八条开始遍历
				System.out.println(s+" "+map.get(s));//文件路径行号+个数
		}
		sc.close();
	}
}
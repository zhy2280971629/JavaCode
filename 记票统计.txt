题目描述
请实现接口:
unsigned int AddCandidate (char* pCandidateName);
功能:设置候选人姓名
输入: char* pCandidateName候选人姓名
输出:无
返回:输入值非法返回0，已经添加过返回0，添加成功返回1
Void Vote(char* pCandidateName);
功能:投票
输入: char* pCandidateName候选人姓名
输出:无
返回:无
unsigned int GetVoteResult (char* pCandidateName);
功能:获取候选人的票数。如果传入为空指针，返回无效的票数，同时说
明本次投票活动结束，释放资源
输入: char* pCandidateName候选人姓名。当输入一个空指针时，返回
无效的票数
输出:无
返回:该候选人获取的票数
void Clear()
/I功能:清除投票结果,释放所有资源
//输入:
//输出:无
//返回
输入描述:
输入候选人的人数，第二行输入候选人的名字，第三行输入投票人的人
数，第四行输入投票。
输出描述:
每行输出候选人的名字和得票数量。
示例1输入输出示例仅供调试，后台判
输入
4
ABCD
8
ABCDEFGH
输出
A:1
B:1
C:1
D:1
Invalid : 4
import java.util.*;

public class Main{
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        while(sc.hasNext()){
            int n = sc.nextInt();
            String[] names = new String[n + 1];
            Map<String, Integer> m = new HashMap<>(n);
            for(int i = 0; i < n; i++){
                names[i] = sc.next();
                m.put(names[i], 0);
            }
            names[n] = "Invalid";
            m.put(names[n], 0);
            int v = sc.nextInt();
            while((--v) >= 0){
                String s = sc.next();
                if(m.containsKey(s)){
                    m.put(s, m.get(s) + 1);
                }
                else{
                    m.put(names[n], m.get(names[n]) + 1);
                }
            }
            StringBuilder sb = new StringBuilder();
            for(String s : names){
                sb.append(s).append(" : ").append(m.get(s)).append('\n');
            }
            System.out.print(sb.toString());
        }
        sc.close();
    }
}
题目描述
继续思考题目"Unique Paths":
如果在图中加入了一些障碍，有多少不同的路径？
分别用0和1代表空区域和障碍
例如
下图表示有一个障碍在3*3的图中央。
[↵  [0,0,0],↵  [0,1,0],↵  [0,0,0]↵]
有2条不同的路径
备注：m和n不超过100.
示例1
输入
[[0,1]]
输出
0
import java.util.*;


public class Solution {
    /**
     * 
     * @param obstacleGrid int整型二维数组 
     * @return int整型
     */
    public int uniquePathsWithObstacles (int[][] obstacleGrid) {
        int row = obstacleGrid.length;
        int col = obstacleGrid[0].length;
        int[][] pathNum = new int[row][col];
        for(int i = 0; i < row; i++){
            if(obstacleGrid[i][0] == 0){
                pathNum[i][0] = 1;
            }else{
                break;
            }
        }
        for(int j = 0; j < col; j++){
            if(obstacleGrid[0][j] == 0){
                pathNum[0][j] = 1;
            }else{
                break;
            }
        }
        for(int i = 1; i < row; i++){
            for(int j = 1; j < col; j++){
                if(obstacleGrid[i][j] == 0){
                    pathNum[i][j] = pathNum[i-1][j] + pathNum[i][j-1];
                }
            }
        }
        return pathNum[row-1][col-1];
    }
}
根据逆波兰表示法，求表达式的值。
有效的运算符包括 +, -, *, / 。每个运算对象可以是整数，也可以是另一个逆波兰表达式。
说明：
整数除法只保留整数部分。
给定逆波兰表达式总是有效的。换句话说，表达式总会得出有效数值且不存在除数为 0 的情况。
示例 ：
输入: ["2", "1", "+", "3", "*"]
输出: 9
解释: ((2 + 1) * 3) = 9
public int evalRPN(String[] tokens) {
        Stack<Integer> s = new Stack<>();
        int a,b;
        for(String str : tokens){
            if(str.equals("+")){
                s.push(s.pop() + s.pop());
            }else if(str.equals("/")){
                b = s.pop();
                a = s.pop();
                s.push(a / b);
            }else if(str.equals("*")){
                s.push(s.pop() * s.pop());
            }else if(str.equals("-")){
                b = s.pop();
                a = s.pop();
                s.push(a-b);
            }else{
                try{
                    int num = Integer.parseInt(str);
                    s.push(num);
                }catch(NumberFormatException e){
                    e.printStackTrace();
                } 
            }
        }
        return s.pop();
    }
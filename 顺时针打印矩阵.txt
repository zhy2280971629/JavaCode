■题目描述
对于一个矩阵，请设计一个算法从左上角(mat[0][0])开始，顺时针打印矩阵元素。
给定int矩阵mat,以及它的维数nxm,请返回一个数组，数组中的元素为矩阵元素的顺时针输出。
测试样例:
[[1,2], [3,4]] ,2,2
返回: [1,2, 4,3]
import java.util.*;

public class Printer {
    public int[] clockwisePrint(int[][] mat, int n, int m) {
        int[] ret = new int[n*m];
        int index = 0;
        int startX = 0;
        int startY = 0;
        int endX = m - 1;
        int endY = n - 1;
        while(startX <= endX && startY <= endY){
            //从左到右打印
            if(startX <= endX){
                for(int i = startX; i <= endX; i++){
                    ret[index++] = mat[startY][i];
                }
            }
            //从上到下打印
            if(startY < endY){
                for(int i = startY+1; i <= endY; i++){
                    ret[index++] = mat[i][endX];
                }
            }
            //从右到左打印
            if(startX < endX && startY < endY){
                for(int i = endX-1; i >= startX; i--){
                    ret[index++] = mat[endY][i];
                }
            }
            //从下到上打印
            if(startY < endY && endX > startX){
                for(int i = endY-1; i >= startY+1; i--){
                    ret[index++] = mat[i][startX];
                }
            }
            startX++;
            startY++;
            endX--;
            endY--;
        }
        return ret;
    }
}